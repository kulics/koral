<program> ::= <declaration>*

<declaration> ::= <variable-declaration> | <function-declaration>

<variable-declaration> ::= "let" "mut"? <identifier> <type> "=" <expression> ";"

<function-declaration> ::= "let" <identifier> "(" <parameter-list>? ")" <type> "=" <expression> ";"

<parameter-list> ::= <parameter> ("," <parameter>)*
<parameter> ::= <identifier> <type>

<type> ::= "Int" | "Float" | "String" | "Bool" | "Void"

<statement> ::= <variable-declaration> 
              | <assignment> 
              | <expression-statement>

<assignment> ::= <identifier> "=" <expression> ";"

<expression-statement> ::= <expression> ";"

<expression> ::= <if-expression>
               | <block-expression>
               | <arithmetic-expression>
               | <comparison-expression>
               | <term>

<if-expression> ::= "if" <expression> "then" <expression> "else" <expression>

<block-expression> ::= "{" <statement>* <expression>? "}"

<arithmetic-expression> ::= <expression> <arithmetic-operator> <expression>
<arithmetic-operator> ::= "+" | "-" | "*" | "/" | "%"

<comparison-expression> ::= <expression> <comparison-operator> <expression>
<comparison-operator> ::= "==" | "!=" | ">" | "<" | ">=" | "<="

<term> ::= <integer-literal>
         | <float-literal>
         | <string-literal>
         | <bool-literal>
         | <function-call>
         | <identifier>

<function-call> ::= <identifier> "(" <argument-list>? ")"
<argument-list> ::= <expression> ("," <expression>)*

<integer-literal> ::= [0-9]+
<float-literal> ::= [0-9]+ "." [0-9]+
<string-literal> ::= "\"" [^"]* "\""
<bool-literal> ::= "true" | "false"
<identifier> ::= [a-zA-Z][a-zA-Z0-9_]*
